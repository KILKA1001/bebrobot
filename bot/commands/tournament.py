import discord
from discord.ext import commands
from typing import Optional

from bot.systems.tournament_logic import create_tournament as create_tournament_logic, Tournament
from bot.systems.tournament_db import (
    create_tournament as db_create_tournament,
    add_participant as db_add_participant,
    list_participants as db_list_participants,
    create_matches as db_create_matches,
    get_matches as db_get_matches,
    record_match_result as db_record_match_result,
    save_tournament_result as db_save_tournament_result
)

# –í –ø–∞–º—è—Ç–∏ —Ö—Ä–∞–Ω–∏–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã —Ç—É—Ä–Ω–∏—Ä–æ–≤
active_tournaments: dict[int, Tournament] = {}

bot = commands.Bot(command_prefix='?', intents=commands.Intents.all())

@bot.command(name='createtournament')
@commands.has_permissions(administrator=True)
async def createtournament(ctx):
    """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç—É—Ä–Ω–∏—Ä –∏ –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"""
    t_id = db_create_tournament()
    # –°–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç —Ç—É—Ä–Ω–∏—Ä–∞, —É—á–∞—Å—Ç–Ω–∏–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    active_tournaments[t_id] = create_tournament_logic([])
    await ctx.send(f"üèÅ –¢—É—Ä–Ω–∏—Ä —Å–æ–∑–¥–∞–Ω (ID: {t_id}). –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `?jointournament {t_id}` —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è.")

@bot.command(name='jointournament')
async def jointournament(ctx, tournament_id: int):
    """–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –æ—Ç–∫—Ä—ã—Ç–æ–º—É —Ç—É—Ä–Ω–∏—Ä—É"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ
    participants = db_list_participants(tournament_id)
    if ctx.author.id in participants:
        await ctx.send("‚ùå –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —ç—Ç–æ–º —Ç—É—Ä–Ω–∏—Ä–µ.")
        return
    db_add_participant(tournament_id, ctx.author.id)
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ø–∞–º—è—Ç—å
    if tournament_id in active_tournaments:
        active_tournaments[tournament_id].participants.append(ctx.author.id)
    await ctx.send(f"‚úÖ {ctx.author.mention}, –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ç—É—Ä–Ω–∏—Ä–µ {tournament_id}.")

@bot.command(name='startround')
@commands.has_permissions(administrator=True)
async def startround(ctx, tournament_id: int):
    """–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥ —Ç—É—Ä–Ω–∏—Ä–∞"""
    # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ –ë–î
    participants = db_list_participants(tournament_id)
    if len(participants) < 2:
        await ctx.send("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞—É–Ω–¥–∞.")
        return
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç —Ç—É—Ä–Ω–∏—Ä–∞
    tour = active_tournaments.get(tournament_id)
    if not tour:
        tour = create_tournament_logic(participants)
        active_tournaments[tournament_id] = tour
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∞—Ä—ã –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ë–î
    matches = tour.generate_round()
    round_no = tour.current_round - 1
    db_create_matches(tournament_id, round_no, matches)
    # –í—ã–≤–æ–¥–∏–º embed —Å –ø–∞—Ä–∞–º–∏
    embed = discord.Embed(title=f"üéÆ –¢—É—Ä–Ω–∏—Ä {tournament_id} ‚Äî –†–∞—É–Ω–¥ {round_no}", color=discord.Color.blue())
    for idx, m in enumerate(matches, start=1):
        embed.add_field(
            name=f"–ú–∞—Ç—á {idx}",
            value=(f"<@{m.player1_id}> vs <@{m.player2_id}>\n"
                   f"–†–µ–∂–∏–º: **{m.mode}**\n"
                   f"–ö–∞—Ä—Ç–∞: `{m.map_id}`"),
            inline=False
        )
    await ctx.send(embed=embed)

@bot.command(name='reportresult')
async def reportresult(ctx, tournament_id: int, round_number: int, match_index: int, winner: int):
    """–ó–∞–ø–∏—Å–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Ç—á–∞ (winner: 1 –∏–ª–∏ 2)"""
    tour = active_tournaments.get(tournament_id)
    if not tour:
        await ctx.send("‚ùå –¢—É—Ä–Ω–∏—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
        return
    try:
        # –ó–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –ø–∞–º—è—Ç—å
        tour.record_result(round_number, match_index - 1, winner)
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –ë–î
        db_matches = db_get_matches(tournament_id, round_number)
        match_rec = db_matches[match_index - 1]
        db_record_match_result(match_rec['id'], winner)
        await ctx.send("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: {e}")

@bot.command(name='tournamentstatus')
async def tournamentstatus(ctx, tournament_id: int, round_number: Optional[int] = None):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ç—É—Ä–Ω–∏—Ä–∞ –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞—É–Ω–¥–∞"""
    if round_number is None:
        # –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: –∫–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—É–Ω–¥
        participants = db_list_participants(tournament_id)
        tour = active_tournaments.get(tournament_id)
        last_round = (tour.current_round - 1) if tour else 0
        await ctx.send(
            f"üèü –¢—É—Ä–Ω–∏—Ä {tournament_id}: —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ {len(participants)}, –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—É–Ω–¥ {last_round}"
        )
    else:
        # –ü–æ–∫–∞–∑–∞—Ç—å –º–∞—Ç—á–∏ —Ä–∞—É–Ω–¥–∞ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        db_matches = db_get_matches(tournament_id, round_number)
        if not db_matches:
            await ctx.send(f"‚ùå –†–∞—É–Ω–¥ {round_number} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return
        embed = discord.Embed(title=f"üìã –¢—É—Ä–Ω–∏—Ä {tournament_id} ‚Äî –†–∞—É–Ω–¥ {round_number}", color=discord.Color.green())
        for idx, m in enumerate(db_matches, start=1):
            res = m['result']
            status = '‚è≥' if res is None else ('üèÜ 1' if res == 1 else 'üèÜ 2')
            embed.add_field(
                name=f"–ú–∞—Ç—á {idx} {status}",
                value=f"<@{m['player1_id']}> vs <@{m['player2_id']}> ‚Äî —Ä–µ–∂–∏–º {m['mode']}, –∫–∞—Ä—Ç–∞ `{m['map_id']}`",
                inline=False
            )
        await ctx.send(embed=embed)

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –±–æ—Ç–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ —Ñ–∞–π–ª–∞ –≤ main.py –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞—Ö_bot
