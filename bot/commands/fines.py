import discord
from discord.ext import commands
from datetime import datetime, timedelta, timezone
from bot.data import db
from bot.systems.fines_logic import build_fine_embed, FineView, FinePaginator

ALLOWED_ROLES = []  # üëâ —Å—é–¥–∞ –º–æ–∂–Ω–æ –≤–ø–∏—Å–∞—Ç—å ID —Ä–æ–ª–µ–π, –∫–æ–º—É —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –≤—ã–¥–∞–≤–∞—Ç—å —à—Ç—Ä–∞—Ñ—ã

def has_permission(ctx):
    if ctx.author.guild_permissions.administrator:
        return True
    return any(role.id in ALLOWED_ROLES for role in ctx.author.roles)

@commands.command(name="fine")
async def fine(ctx, member: discord.Member, amount: str, fine_type: int, *, reason: str = "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã"):
    if not has_permission(ctx):
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —à—Ç—Ä–∞—Ñ–æ–≤.")
        return

    try:
        amount_value = float(amount.replace(',', '.'))
        if amount_value <= 0:
            raise ValueError

        if fine_type not in (1, 2):
            await ctx.send("‚ùå –¢–∏–ø —à—Ç—Ä–∞—Ñ–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 1 (–æ–±—ã—á–Ω—ã–π) –∏–ª–∏ 2 (—É—Å–∏–ª–µ–Ω–Ω—ã–π).")
            return

        due_date = datetime.now(timezone.utc) + timedelta(days=14 if fine_type == 1 else 30)

        fine = db.add_fine(
            user_id=member.id,
            author_id=ctx.author.id,
            amount=amount_value,
            fine_type=fine_type,
            reason=reason,
            due_date=due_date
        )

        if fine:
            embed = discord.Embed(
                title="üìå –ù–∞–∑–Ω–∞—á–µ–Ω —à—Ç—Ä–∞—Ñ",
                description=f"{member.mention}, –≤–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω —à—Ç—Ä–∞—Ñ.",
                color=discord.Color.red()
            )
            embed.add_field(name="–°—É–º–º–∞", value=f"{amount_value:.2f} –±–∞–ª–ª–æ–≤", inline=True)
            embed.add_field(name="–¢–∏–ø", value=f"{'–û–±—ã—á–Ω—ã–π (14 –¥–Ω–µ–π)' if fine_type == 1 else '–£—Å–∏–ª–µ–Ω–Ω—ã–π (30 –¥–Ω–µ–π)'}", inline=True)
            embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)
            embed.add_field(name="–°—Ä–æ–∫ –æ–ø–ª–∞—Ç—ã", value=due_date.strftime("%d.%m.%Y"), inline=True)
            embed.set_footer(text=f"ID —à—Ç—Ä–∞—Ñ–∞: {fine['id']}")

            await ctx.send(embed=embed)
            try:
                await member.send(embed=embed)
            except discord.Forbidden:
                await ctx.send(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –õ–° {member.mention}")

        else:
            await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —à—Ç—Ä–∞—Ñ.")

    except ValueError:
        await ctx.send("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É.")

@commands.command(name="myfines")
async def myfines(ctx):
    user_id = ctx.author.id
    fines = db.get_user_fines(user_id)

    if not fines:
        await ctx.send("‚úÖ –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤!")
        return

    paginator = FinePaginator(fines)
    page = 1
    page_items = paginator.get_page(page)

    for fine in page_items:
        embed = build_fine_embed(fine)
        view = FineView(fine)
        await ctx.send(embed=embed, view=view)
